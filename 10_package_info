/**
 * Pripravte objeky pro tuto business domenu: Bankovnictvi
 *
 * Bankovni ucet:
 * id, drzitel, cislo uctu, ..
 * vybrat, vlozit, ...
 *
 * Histori o transakci:
 * Transakce: id, odkud, kam, ...
 * informace o transakci
 *
 *
 *
 * Uzivatel 5
 * jmeno, prijmeni, adresa...
 * umet se predstavit
 *
 */

package cz.robodreams.javadeveloper.homeworks.hw10objectbasic;

import java.time.LocalDateTime;

package cz.robodreams.javadeveloper.homeworks.hw10objectbasic;

public class BankovniUcet {
    private int id;
    private String drzitel;
    private String cisloUctu;
    private double zustatek;

    // Konstruktor
    public BankovniUcet(int id, String drzitel, String cisloUctu, double pocatecniZustatek) {
        this.id = id;
        this.drzitel = drzitel;
        this.cisloUctu = cisloUctu;
        this.zustatek = pocatecniZustatek;
    }

    // Metody pro operace s účtem
    public void vybrat(double castka) {
        if (castka > 0 && castka <= zustatek) {
            zustatek -= castka;
            System.out.println("Vybráno: " + castka);
        } else {
            System.out.println("Nedostatečný zůstatek nebo neplatná částka.");
        }
    }

    public void vlozit(double castka) {
        if (castka > 0) {
            zustatek += castka;
            System.out.println("Vloženo: " + castka);
        } else {
            System.out.println("Neplatná částka pro vklad.");
        }
    }
}



package cz.robodreams.javadeveloper.homeworks.hw10objectbasic;

public class Transakce {
    private int id;
    private String odkud;
    private String kam;
    private double castka;
    private LocalDateTime casTransakce;

    // Konstruktor
    public Transakce(int id, String odkud, String kam, double castka, LocalDateTime casTransakce) {
        this.id = id;
        this.odkud = odkud;
        this.kam = kam;
        this.castka = castka;
        this.casTransakce = casTransakce;
    }

    // Metoda pro získání informací o transakci
    public String getInfo() {
        return "Transakce " + id + ": " + odkud + " -> " + kam + ", Částka: " + castka + ", Čas: " + casTransakce;
    }
}


public class Uzivatel {
    private String jmeno;
    private String prijmeni;
    private String adresa;
    private String email;
    private String telefon;


    // Konstruktor
    public Uzivatel(String jmeno, String prijmeni, String adresa, String email, String telefon) {
        this.jmeno = jmeno;
        this.prijmeni = prijmeni;
        this.adresa = adresa;
        this.email = email;
        this.telefon = telefon;
    }

    // Metoda pro představení uživatele
    public void predstavitSe() {
        System.out.println("Jmenuji se " + jmeno + " " + prijmeni + " a bydlím na adrese: " + adresa + "Kontaktovat mne můžete na emailu" + email + "nebo na telefonu" + telefon + ".");
    }
}
