Vygenerovat kód jako Java programátor s jednořádkovými komentáři (důležité).
Důležité je vyřešit úkoly krok po kroku a bez chyb.
Rozdělit kód do souborů podle Class.

package cz.robodreams.javadeveloper.project;


10
Zaimplementovat Objekty a strukturu
Vydefinovat základní třídy a metody pro uživatele a knihovnu (název, autor, genre, počet výtisků)

Třída Book rozšiřuje třídu Item
Třída Item importuje vyjímky, viz úkol č. 15

@Getter
@Setter
@RequiredArgConstructor

deklarace atributů title, author, genre
definice konstruktoru
metoda toString - vygeruje řetězec obsahující informace o knize

definice abstraktní metody getTitle

metoda isAvailable, BorowedToUser, returnToLibrary, reserveToUser

přětěžit toString, která vrací textovou reprezentaci objektu třídy Item.



11
Zaimplementovat Dědičnost
Navrhněte třídy/objekty a naimplementujte:
a) Přidání nové knihy na půjčování (Builder)
b) Výpis všech knih, které knihovna půjčuje
c) Vypis všech volných knih k půjčení
d) Vytvořte žánr knihy (beletrie, odborné, pohádka) a přiřaďte toto do svého návrhu. Pro každý žánr definovat konstruktor výčtového typu. Pro konstruktor přiřaďte řetězec hodnot představující název žánru. Pomocí ToString - přetěžit metodu
e) Půjčení knihy uživatelem (co si půjčuje, čas od kdy - do kdy)
f) Výpis, co má který uživatel půjčené


Class User obsahuje metody name, borrowedItem, reservedItem, returnOrUnreservedItem, ReserveItem, getBorrowedItemList, getReservedItemList, hasBorrowedItems, hasReservedItems, countBrowedItems, countReservedItems


12
Zaimplementovat polymorfismus a zapouzdření
Třídy by měli mít vhodné úrovně přístupu (public, private, protected) pro datové členy a metody


13
přidat další artikl k vypůjčování a to časopisy, noviny
Požadavek naimplementovat, nejlépe s využitím generik.
 
Refaktorujte třídu Library tak, aby byla generická. Měla by být schopná pracovat s libovolným typem objektů (nejen knihami).
 *     Umožněte třídě Library pracovat s různými typy knih nebo jiných objektů (noviny časopisy) pomocí generik.
 *     A tyto objekty nasledně vytvořtě.
 *     Upravte metodu displayBooks tak, aby byla generická a mohla zobrazovat různé typy objektů uložených v knihovně.

Class Magazine a class Newspaper dědí od class Item

@RequiredArgsConstruktor
getTitle přetěžit, vrací název časopisu
toString - přetěžit, vrací textovou prezentaci objektu třídy Magazine

14
Zaimplementovat návrhové vzory, tak jak je to vhodné pro toto zadání
např. Creation - singleton, Builder
např. Structural - Composite
např. Behavior - strategy, observer


15
Zaimplementovat vlastní výjimky (exceptions) pro nestandartní situace běhu programu
RunTimeException a rozšířit o:
UserNotFoundException
ItemNotFoundException
ItemdoesNotExost
ItemAlreadyBorrowedException


16
Zaimplementovat funkce (např. Consumer, Predicate, Supplier)
např. Použití Predicate pro filtrování knih podle žánru
Zaimplementovat stream API pro filtrování knih


17
Naimplementujte metody, které budou extrahovat data ze složitějšího modelu. 
Cílem je implementovat např. - map, flatmap, stream, filtr, peek, collect, tolist, tomap, reduce.


18 není


19
Zaimplementovat Threads a to tak, aby nedošlo k deadlock

Knihovna bude umet prijmout rezervaci na knihu pres sit.
Tzn. Vytvorite server v ramci knihovny, ktery prijme rezervaci a clienta, ktery tuto rezervaci bude umet poslat.

Zaimplementovat networking a multivláknost (Multivláknový client/server)
Knihovna bude umet prijmout rezervaci na knihy, noviny a časopisy pres sit.
Tzn. Vytvorite server  v ramci knihovny, ktery prijme rezervaci a clienta, ktery tuto rezervaci bude umet poslat.

Třída Echoer obsahuje vstupy a výstupy a síťovou komunikaci.
Dědí od třídy Thread pro asynchronní zpracování.
Konstruktor přijímá soket pro vstupní parametr

BufferedReader pro čtení ze vstupního proudu soketu
PrintWriter zápis do vstupního proudu soketu
nekonečná smyčka pro čtení ze vstupního soketu
přečíst zprávu ze vstupního soketu

if exit, tak konec
elif reservation, tak zpracujte rezervaci a odešlete potvrzení
else, tak unknown command

v bloku catch zachyťte vyjímky IOException a vypište chybu
finally, tak uzavřetesoket

Class UserChannel obsahuje onItemBorroved, onItemReturned, onItemReserved
class UserChannelImpl obsahuje Borrowed, Returned, reserved a jméno uživatele, název knihy, novin a časopisu


Class Client
Importujte potřebné třídy pro manipulaci se vstupem a výstupem a síťovou komunikaci.

V metodě main():
a. Vytvořte soket pro spojení se serverem na adrese "localhost" a portu 5000.
b. Vytvořte objekty pro čtení ze serveru a zápis na server.
c. Vytvořte objekt třídy Scanner pro čtení vstupu od uživatele.
d. V nekonečné smyčce:
i. Vyzvěte uživatele k zadání textu pro odeslání.
ii. Přečtěte vstup od uživatele.
iii. Pokud vstup není "exit":
1. Pošlete text na server.
2. Přečtěte odpověď ze serveru.
3. Vypište odpověď ze serveru.
e. Pokud je vstup "exit", ukončete smyčku.
V bloku catch zachyťte výjimku IOException a vypište chybu spojenou s klientem.



class LibraryServer
Importujte výjimky ItemAlreadyBorrowedException a UserNotFoundException.
Importujte třídy pro manipulaci se vstupem a výstupem a síťovou komunikaci.
Importujte třídy pro vytvoření objektu uživatele, knihy a knihovny.
Vytvořte statického uživatele user pomocí User.Builder.
Vytvořte instance knih book1 a book2.
Vytvořte statickou metodu generateLibrary(), která generuje knihovnu s několika knihami.

V metodě main():
a. Vytvořte nový serverový soket, který naslouchá na portu 5000.
b. V nekonečné smyčce:
i. Přijímejte nové připojení a pro každé připojení vytvořte nový vlákno ClientHandler.
Vytvořte vnořenou třídu ClientHandler, která dědí od třídy Thread.
V konstruktoru ClientHandler přijímejte soket a knihovnu.
V metodě run():
a. Vytvořte objekty pro čtení ze vstupu klienta a zápis na výstup klienta.
b. V nekonečné smyčce:
i. Čtěte vstup od klienta.
ii. Pokud klient poslal "exit", ukončete smyčku.
iii. Pokud klient poslal "RESERVATION: ", zpracujte rezervaci.
iv. Pokud klient poslal "HELP", pošlete seznam dostupných položek.
v. Pokud klient poslal jiný příkaz, pošlete zprávu "UNKNOWN COMMAND".
V bloku catch zachyťte výjimku IOException a vypište chybu spojenou se serverem.
Ve vnitřním bloku finally uzavřete soket.





20 není


21
Vytvořte spustitelnou Main metodu s těmito parametry:

Users:
Jan Novák
Václav Novotný
Pavel Dvořák
Vladimír Černý
Iva Modrá
Eva Nová

Books:
William Shakespeare, Kupec benátský, Genre - Beletrie
William Shakespeare, Sen noci svatojánské, Genre - Beletrie
William Shakespeare, Hamlet, Genre - Beletrie
William Shakespeare, Mackbet, Genre - Beletrie

Pavel Herout, Učebnice jazyka Java, Genre - Odborné
Pavel Herout, Java a XML, Genre - Odborné
Ward Brian, How Linux Works, Genre - Odborné
Kali Linux Penetration Testing Bible, Genre - Odborné

Antoine de Saint-Exupéry, Malý princ, Genre - Pohádka
Bohumil Říha, Honzíkova cesta, Genre - Pohádka
Josef Čapek, Povídání o pejskovi a kočičce, Genre - Pohádka


Noviny:
MF DNES, typ - Seriózně-populární tisk 
Hospodářské noviny, typ - Poloseriózní
Deník, typ - Seriózně-populární tisk 
Deník N, typ - Poloseriózní
E15, typ - Poloseriózní


Časopisy:
IT systems
Security World
ChannelWorld
CIO
Security

vytvořit uživatele pomocí builder třídy User
vytvořit uživatelské kanály
vytvořit seznam uživatelů
vytvořte instanci knih, novin a časopisů a informace o nich
přidat knihy do seznamu
instance novin a časopisů
seznam novin a časopiů a informace o nich
možnost přidat do seznamu
seznam všech položek

knihovna a přidat uživatelské kanály pro všechny položky

možnost půjčit
možnost rezervovat
info o půjčce 
info o rezervaci

kontrola dostupnosti knih
info uživatel o půjčce a rezervaci

dostupnost položky v knihovně

/////////////////////////////////////////////////////////////////////////////////////////////
21
Pokrýt projekt JUnit testy minimálně na coverage 10 % a ověřit pokrytí
JUnit framework implementace testů

Měla by zde být vytvořena třída UserTest, MainTest, LibraryTest, ItemTest

